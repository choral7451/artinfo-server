name: CI/CD Docker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/artinfo-server
  VERSION: ${{ github.sha }}
  CONTANIER_NAME1: artinfo-server-deploy1
  CONTANIER_NAME2: artinfo-server-deploy2

jobs:
  build:
    runs-on: ubuntu-latest
    name: build
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create Environment File
        run: |
          touch ./src/main/resources/application.yml
          echo "${{ secrets.application }}" >> ./src/main/resources/application.yml
          touch ./src/test/resources/application.yml
          echo "${{ secrets.application_test }}" >> ./src/test/resources/application.yml
          
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar

      - name: docker image build
        run: docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }} .

      - name: docker login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: docker Hub push
        run: docker push ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

#      - name: grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: gradle build
#        run: ./gradlew clean build
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GHCR_TOKEN }}
#
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          builder: ${{ steps.buildx.outputs.name }}
#          push: true
#          tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
#          context: .



  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, artinfo-server-deploy]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Docker run
        run: |
          sudo docker run -d -p 8081:8080 --name ${{ env.CONTANIER_NAME2 }} --cpus=0.5 --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
          
          sudo docker image prune -af
